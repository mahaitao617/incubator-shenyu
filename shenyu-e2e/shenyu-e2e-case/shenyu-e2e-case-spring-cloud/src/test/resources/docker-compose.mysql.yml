#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
version: '2.3'

services:
  zookeeper:
    image: zookeeper:3.5
    restart: always
    expose:
      - 2181

  nacos:
#    image: nacos/nacos-server:v2.2.3-slim
    image: nacos/nacos-server:v2.2.3
    environment:
      - TZ=Asia/Shanghai
      - MODE=standalone
    expose:
      - 8848
      - 9848
      - 9849
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"

  admin:
    image: apache/shenyu-admin:latest
    expose:
      - 9095
    ports:
      - "9095:9095"
    environment:
      - SPRING_PROFILES_ACTIVE=mysql
      - spring.datasource.username=shenyue2e
      - spring.datasource.password=123456
      - spring.datasource.url=jdbc:mysql://mysql:3306/shenyu?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
    healthcheck:
      test: [ "CMD-SHELL", "wget -q -O - http://admin:9095/actuator/health | grep UP || exit 1" ]
      timeout: 2s
      retries: 3
      start_period: 5s
    depends_on:
      apollo-portal:
        condition: service_healthy
    volumes:
      - ../../../../../shenyu-admin/target/classes/application.yml:/opt/shenyu-admin/conf/application.yml
      - /tmp/shenyu-e2e/mysql/mysql-connector.jar:/opt/shenyu-admin/ext-lib/mysql-connector.jar

  eureka:
    image: shenyu-examples-eureka:latest
    restart: always
    expose:
      - 8761
    ports:
      - "8761:8761"
    depends_on:
      - admin

  springcloud:
    image: shenyu-examples-springcloud:latest
    restart: always
    environment:
      - shenyu.register.serverLists=http://admin:9095
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
    expose:
      - 8884
    ports:
      - "8884:8884"
    depends_on:
      - eureka

  gateway:
    image: apache/shenyu-bootstrap:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka:8761/eureka/
    expose:
      - 9195
    ports:
      - "9195:9195"
    depends_on:
      admin:
        condition: service_healthy
    volumes:
      - ../../../../../shenyu-bootstrap/target/classes/application.yml:/opt/shenyu-bootstrap/conf/application.yml

  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=123123
      - MYSQL_USER=shenyue2e
      - MYSQL_PASSWORD=123456
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=123123 --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 10
    volumes:
      - ./apolloconfigdb.sql:/docker-entrypoint-initdb.d/apolloconfigdb.sql
      - ./apolloportaldb.sql:/docker-entrypoint-initdb.d/apolloportaldb.sql
      - /tmp/shenyu-e2e/mysql/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  apollo-configservice:
    image: apolloconfig/apollo-configservice:2.1.0
    restart: always
    ports:
      - "8080:8080"
    environment:
      - TZ='Asia/Shanghai'
      - SERVER_PORT=8080
      - EUREKA_INSTANCE_IP_ADDRESS=localhost
      - EUREKA_INSTANCE_HOME_PAGE_URL=http://apollo-configservice:8080
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/ApolloConfigDB?characterEncoding=utf8&serverTimezone=Asia/Shanghai
      - SPRING_DATASOURCE_USERNAME=shenyue2e
      - SPRING_DATASOURCE_PASSWORD=123456
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://apollo-configservice:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      mysql:
        condition: service_healthy

  apollo-adminservice:
    image: apolloconfig/apollo-adminservice:2.1.0
    restart: always
    ports:
      - "8090:8090"
    depends_on:
      apollo-configservice:
        condition: service_healthy
    environment:
      - TZ='Asia/Shanghai'
      - SERVER_PORT=8090
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/ApolloConfigDB?characterEncoding=utf8&serverTimezone=Asia/Shanghai
      - SPRING_DATASOURCE_USERNAME=shenyue2e
      - SPRING_DATASOURCE_PASSWORD=123456
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/health" ]
      interval: 10s
      timeout: 5s
      retries: 10

  apollo-portal:
    image: apolloconfig/apollo-portal:2.1.0
    restart: always
    ports:
      - "8070:8070"
    depends_on:
      apollo-adminservice:
        condition: service_healthy
    environment:
      - TZ='Asia/Shanghai'
      - SERVER_PORT=8070
      - EUREKA_INSTANCE_IP_ADDRESS=apollo-configservice
      - APOLLO_PORTAL_ENVS=dev
      - DEV_META=http://apollo-configservice:8080
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/ApolloPortalDB?characterEncoding=utf8&serverTimezone=Asia/Shanghai
      - SPRING_DATASOURCE_USERNAME=shenyue2e
      - SPRING_DATASOURCE_PASSWORD=123456
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8070/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 90s
